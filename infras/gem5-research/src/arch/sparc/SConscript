# -*- mode:python -*-

# Copyright (c) 2004-2005 The Regents of The University of Michigan
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('*')

Source('asi.cc', tags='sparc isa')
Source('decoder.cc', tags='sparc isa')
Source('faults.cc', tags='sparc isa')
Source('fs_workload.cc', tags='sparc isa')
Source('isa.cc', tags='sparc isa')
Source('linux/se_workload.cc', tags='sparc isa')
Source('linux/syscalls.cc', tags='sparc isa')
Source('nativetrace.cc', tags='sparc isa')
Source('pagetable.cc', tags='sparc isa')
Source('process.cc', tags='sparc isa')
Source('remote_gdb.cc', tags='sparc isa')
Source('se_workload.cc', tags='sparc isa')
Source('tlb.cc', tags='sparc isa')
Source('ua2005.cc', tags='sparc isa')

SimObject('SparcDecoder.py', sim_objects=['SparcDecoder'], tags='sparc isa')
SimObject('SparcFsWorkload.py', sim_objects=['SparcFsWorkload'],
    tags='sparc isa')
SimObject('SparcInterrupts.py', sim_objects=['SparcInterrupts'],
    tags='sparc isa')
SimObject('SparcISA.py', sim_objects=['SparcISA'], tags='sparc isa')
SimObject('SparcMMU.py', sim_objects=['SparcMMU'], tags='sparc isa')
SimObject('SparcNativeTrace.py', sim_objects=['SparcNativeTrace'],
    tags='sparc isa')
SimObject('SparcSeWorkload.py', sim_objects=[
    'SparcSEWorkload', 'SparcEmuLinux'], tags='sparc isa')
SimObject('SparcTLB.py', sim_objects=['SparcTLB'], tags='sparc isa')

SimObject('SparcCPU.py', sim_objects=[], tags='sparc isa')
SimObject('AtomicSimpleCPU.py', sim_objects=[], tags='sparc isa')
SimObject('TimingSimpleCPU.py', sim_objects=[], tags='sparc isa')
SimObject('NonCachingSimpleCPU.py', sim_objects=[], tags='sparc isa')
SimObject('O3CPU.py', sim_objects=[], tags='sparc isa')

DebugFlag('Sparc', "Generic SPARC ISA stuff", tags='sparc isa')
DebugFlag('RegisterWindows', "Register window manipulation", tags='sparc isa')

ISADesc('isa/main.isa', tags='sparc isa')
